name: Build Python 3.12.10 for Android

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 安装构建依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential zlib1g-dev libffi-dev libssl-dev libbz2-dev \
            libreadline-dev libsqlite3-dev libexpat-dev wget curl llvm \
            libncurses5-dev libncursesw5-dev xz-utils tk-dev libxml2-dev \
            libxmlsec1-dev liblzma-dev git tar python3 python3-pip unzip \
            binutils tree patchelf perl libtext-template-perl
          perl -MText::Template -e 'print "Text::Template OK\n"' || { echo "Text::Template 安装失败"; exit 1; }

      - name: 设置 Android NDK (r27b)
        uses: android-actions/setup-android@v2
        with:
          ndk-version: "27.2.12479018"

      - name: 验证 NDK 和 Perl 安装
        run: |
          echo "Android NDK 根目录: $ANDROID_NDK_ROOT"
          ls -l $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/
          $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang --version
          perl -v
          perl -MText::Template -e 'print "Text::Template OK\n"' || { echo "Text::Template 不可用"; exit 1; }

      - name: 配置交叉编译工具
        run: |
          export READELF=$(which readelf)
          echo "READELF=$READELF" >> $GITHUB_ENV
          echo "AR=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar" >> $GITHUB_ENV
          echo "RANLIB=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH" >> $GITHUB_ENV

      - name: 清理构建目录
        run: |
          rm -rf $GITHUB_WORKSPACE/android-vroot
          mkdir -p $GITHUB_WORKSPACE/android-vroot/data/python
          echo "构建目录已清理"

      - name: 下载 Python 3.12.10 源码
        run: |
          wget https://www.python.org/ftp/python/3.12.10/Python-3.12.10.tar.xz
          echo "07ab697474595e06f06647417d3c7fa97ded07afc1a7e4454c5639919b46eaea Python-3.12.10.tar.xz" | sha256sum -c -
          tar -xf Python-3.12.10.tar.xz
          mv Python-3.12.10 cpython

      - name: 下载并应用 Termux 补丁
        run: |
          mkdir -p patches
          for patch in 0001-fix-termios.patch 0002-fix-posix-module.patch 0003-disable-broken-tests.patch 0004-fix-sysconfig.patch 0005-fix-ctypes.patch 0006-fix-multiprocessing.patch; do
            wget https://raw.githubusercontent.com/termux/termux-packages/master/packages/python/$patch -O patches/$patch || echo "补丁 $patch 未找到"
          done
          cd cpython
          for patch in ../patches/*.patch; do
            if [ -f "$patch" ]; then
              patch -p1 < "$patch" || echo "应用补丁 $patch 失败，跳过"
            fi
          done

      - name: 下载并交叉编译 zlib
        run: |
          wget https://zlib.net/zlib-1.3.1.tar.gz
          tar -xzf zlib-1.3.1.tar.gz
          cd zlib-1.3.1
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          export CFLAGS="--sysroot=$SYSROOT -O3"
          export LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          ./configure --prefix=/data/python --static
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          cd ..
          echo "ZLIB_INCLUDE=$GITHUB_WORKSPACE/android-vroot/data/python/include" >> $GITHUB_ENV
          echo "ZLIB_LIB=$GITHUB_WORKSPACE/android-vroot/data/python/lib" >> $GITHUB_ENV

      - name: 下载并交叉编译 bzip2
        run: |
          wget https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz
          tar -xzf bzip2-1.0.8.tar.gz
          cd bzip2-1.0.8
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          export CFLAGS="-O3"
          export LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make libbz2.a > make.log 2>&1 || { echo "make 失败"; cat make.log; exit 1; }
          mkdir -p $GITHUB_WORKSPACE/android-vroot/data/python/include
          mkdir -p $GITHUB_WORKSPACE/android-vroot/data/python/lib
          cp bzlib.h $GITHUB_WORKSPACE/android-vroot/data/python/include/
          cp libbz2.a $GITHUB_WORKSPACE/android-vroot/data/python/lib/
          cd ..

      - name: 下载并交叉编译 libffi
        run: |
          wget https://github.com/libffi/libffi/releases/download/v3.4.6/libffi-3.4.6.tar.gz
          tar -xzf libffi-3.4.6.tar.gz
          cd libffi-3.4.6
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            CFLAGS="--sysroot=$SYSROOT -O3" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          cd ..

      - name: 下载并交叉编译 libexpat
        run: |
          wget https://github.com/libexpat/libexpat/releases/download/R_2_6_3/expat-2.6.3.tar.gz
          tar -xzf expat-2.6.3.tar.gz
          cd expat-2.6.3
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            CFLAGS="--sysroot=$SYSROOT -O3" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          cd ..

      - name: 下载并交叉编译 libmpdec
        run: |
          wget https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-4.0.0.tar.gz
          tar -xzf mpdecimal-4.0.0.tar.gz
          cd mpdecimal-4.0.0
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang++
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          unset CPPFLAGS
          export CFLAGS="-I$GITHUB_WORKSPACE/android-vroot/data/python/include --sysroot=$SYSROOT -O3"
          export LDFLAGS="-L$GITHUB_WORKSPACE/android-vroot/data/python/lib --sysroot=$SYSROOT -fuse-ld=lld"
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            > configure.log 2>&1 || { echo "configure 失败"; cat configure.log; exit 1; }
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          ls -l $GITHUB_WORKSPACE/android-vroot/data/python/lib/libmpdec.a || { echo "libmpdec.a 未找到"; exit 1; }
          ls -l $GITHUB_WORKSPACE/android-vroot/data/python/include/mpdecimal.h || { echo "mpdecimal.h 未找到"; exit 1; }
          cd ..

      - name: 下载并交叉编译 xz
        run: |
          wget https://tukaani.org/xz/xz-5.6.2.tar.gz
          tar -xzf xz-5.6.2.tar.gz
          cd xz-5.6.2
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            CFLAGS="--sysroot=$SYSROOT -O3" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          cd ..
          echo "LZMA_H_PATH=$GITHUB_WORKSPACE/android-vroot/data/python/include" >> $GITHUB_ENV
          echo "LZMA_LIB_PATH=$GITHUB_WORKSPACE/android-vroot/data/python/lib" >> $GITHUB_ENV

      - name: 下载并交叉编译 ncurses
        run: |
          wget https://ftp.gnu.org/gnu/ncurses/ncurses-6.5.tar.gz
          tar -xzf ncurses-6.5.tar.gz
          cd ncurses-6.5
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            --enable-widec \
            --without-cxx \
            --without-cxx-binding \
            --without-ada \
            --without-manpages \
            --without-progs \
            --without-tests \
            --with-terminfo-dirs=/data/python/share/terminfo \
            CFLAGS="--sysroot=$SYSROOT -O3" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          mv $GITHUB_WORKSPACE/android-vroot/usr/lib/libncursesw.a $GITHUB_WORKSPACE/android-vroot/data/python/lib/ 2>/dev/null || true
          cd ..

      - name: 下载并交叉编译 readline
        run: |
          wget https://ftp.gnu.org/gnu/readline/readline-8.2.tar.gz
          tar -xzf readline-8.2.tar.gz
          cd readline-8.2
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            bash_cv_wcwidth_broken=no \
            CFLAGS="-I$GITHUB_WORKSPACE/android-vroot/data/python/include --sysroot=$SYSROOT -O3" \
            LDFLAGS="-L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lncursesw --sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          cd ..

      - name: 下载并交叉编译 OpenSSL
        run: |
          wget https://www.openssl.org/source/openssl-3.3.2.tar.gz
          tar -xzf openssl-3.3.2.tar.gz
          cd openssl-3.3.2
          export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
          export PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          unset CFLAGS LDFLAGS CPPFLAGS CXXFLAGS
          ./Configure \
            android-arm64 \
            -D__ANDROID_API__=24 \
            no-shared \
            no-tests \
            --prefix=/data/python \
            --openssldir=/data/python/ssl \
            --with-zlib-include=$ZLIB_INCLUDE \
            --with-zlib-lib=$ZLIB_LIB \
            --sysroot=$SYSROOT \
            -d > configure.log 2>&1 || { echo "Configure 失败"; cat configure.log; exit 1; }
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          cd ..

      - name: 下载并交叉编译 SQLite
        run: |
          wget https://www.sqlite.org/2024/sqlite-autoconf-3460000.tar.gz
          tar -xzf sqlite-autoconf-3460000.tar.gz
          cd sqlite-autoconf-3460000
          export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
          export AR=$AR
          export RANLIB=$RANLIB
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            CFLAGS="--sysroot=$SYSROOT -O3" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
          cd ..

      - name: 为 Android 配置 Python
        run: |
          cd cpython
          export CONFIG_SITE=config.site
          export MACHDEP=android
          cat <<EOF > $CONFIG_SITE
          ac_cv_file__dev_ptmx=yes
          ac_cv_file__dev_ptc=no
          ac_cv_func_shm_open=yes
          ac_cv_working_tzset=yes
          ac_cv_func_getgrent=no
          ac_cv_func_setgrent=no
          ac_cv_func_endgrent=no
          ac_cv_func_getpwent=no
          ac_cv_func_setpwent=no
          ac_cv_func_endpwent=no
          ac_cv_func_fork=no
          ac_cv_func_forkpty=no
          ac_cv_func_openpty=no
          ac_cv_func_spawn=no
          ac_cv_func_posix_spawn=no
          ac_cv_func_gethostbyname=no
          ac_cv_func_gethostbyaddr=no
          ac_cv_func_gethostbyname_r=no
          ac_cv_func_nis=no
          ac_cv_func_yp_get_default_domain=no
          ac_cv_func_epoll=no
          ac_cv_func_epoll_create1=no
          ac_cv_func_getservbyname=no
          ac_cv_func_getservbyport=no
          ac_cv_func_getprotobyname=no
          ac_cv_func_sem_clockwait=no
          EOF
          export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
          ./configure \
            --host=aarch64-linux-android \
            --build=x86_64-linux-gnu \
            --prefix=/data/python \
            --disable-ipv6 \
            --with-build-python=$(which python3) \
            --with-system-expat \
            --with-system-ffi \
            --with-system-libmpdec \
            --enable-loadable-sqlite-extensions \
            --enable-optimizations \
            --with-ensurepip=install \
            --with-lto=thin \
            CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang \
            CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang++ \
            AR=$AR \
            RANLIB=$RANLIB \
            READELF=$READELF \
            CFLAGS="-I${LZMA_H_PATH} -I$GITHUB_WORKSPACE/android-vroot/data/python/include -O3" \
            LDFLAGS="-L${LZMA_LIB_PATH} -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -llzma -lreadline -lncursesw -lbz2 -lffi -lssl -lcrypto -lsqlite3 -lexpat -lmpdec -lpython3.12 -ldl -lm --sysroot=$SYSROOT -fuse-ld=lld" \
            > configure.log 2>&1 || { echo "configure 失败"; cat configure.log; cat config.log; exit 1; }

      - name: 配置 Modules/Setup.local
        run: |
          cd cpython
          cat <<EOF > Modules/Setup.local
          zlib zlibmodule.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lz
          _ssl _ssl.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lssl -lcrypto
          _hashlib _hashlib.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lssl -lcrypto
          _curses _curses.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lncursesw
          _curses_panel _curses_panel.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lncursesw
          _bz2 _bz2.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lbz2
          _lzma _lzma.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -llzma
          _sqlite3 _sqlite3.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lsqlite3
          _ctypes _ctypes.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lffi
          _decimal _decimal.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lmpdec -lm
          EOF

      - name: 构建 Python
        run: |
          cd cpython
          make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; cat config.log; exit 1; }

      - name: 安装 Python
        run: |
          cd cpython
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }

      - name: 测试 Python 安装
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE/android-vroot/data/python/bin
          ./python3 -c "import sys; print(sys.platform)"
          ./python3 -c "import decimal; print('decimal 模块加载成功')"
          ./python3 -c "import zlib; print('zlib 模块加载成功')"
          ./python3 -c "import ssl; print('ssl 模块加载成功')"
          ./python3 -c "import sqlite3; print('sqlite3 模块加载成功')"

      - name: 创建部署包
        run: |
          tar -czvf python-3.12.10-android-arm64.tar.gz \
            --transform 's|^android-vroot/||' \
            -C $GITHUB_WORKSPACE/android-vroot \
            data
          tar -tvf python-3.12.10-android-arm64.tar.gz | head -20

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: python-3.12.10-android-arm64
          path: python-3.12.10-android-arm64.tar.gz

      - name: 上传日志文件
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            cpython/config.log
            cpython/configure.log
            cpython/make.log
            cpython/install.log
            mpdecimal-4.0.0/config.log
            mpdecimal-4.0.0/make.log
            mpdecimal-4.0.0/install.log