name: Build Python for Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/27.2.12479018
      LZMA_H_PATH: /home/runner/work/ips/ips/android-vroot/data/python/include
      LZMA_LIB_PATH: /home/runner/work/ips/ips/android-vroot/data/python/lib
      AR: /usr/local/lib/android/sdk/ndk/27.2.12479018/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
      RANLIB: /usr/local/lib/android/sdk/ndk/27.2.12479018/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib
      READELF: /usr/bin/readelf

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置 Android SDK 和 NDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: '7.0'
        ndk-version: '27.2.12479018'

    - name: 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential curl git unzip libbz2-dev libffi-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev zlib1g-dev libexpat1-dev

    - name: 下载并交叉编译 libmpdec
      run: |
        wget https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-4.0.0.tar.gz
        tar -xzf mpdecimal-4.0.0.tar.gz
        cd mpdecimal-4.0.0
        export CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang
        export AR=$AR
        export RANLIB=$RANLIB
        export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
        export CFLAGS="-I$GITHUB_WORKSPACE/android-vroot/data/python/include --sysroot=$SYSROOT -O3"
        export LDFLAGS="-L$GITHUB_WORKSPACE/android-vroot/data/python/lib --sysroot=$SYSROOT -fuse-ld=lld"
        ./configure \
          --host=aarch64-linux-android \
          --prefix=/data/python \
          --disable-shared \
          --enable-static \
          > configure.log 2>&1 || { echo "configure 失败"; cat configure.log; cat config.log; exit 1; }
        make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; exit 1; }
        make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
        ls -l $GITHUB_WORKSPACE/android-vroot/data/python/lib/libmpdec.a || { echo "libmpdec.a 未找到"; exit 1; }
        ls -l $GITHUB_WORKSPACE/android-vroot/data/python/include/mpdecimal.h || { echo "mpdecimal.h 未找到"; exit 1; }
        cd ..

    - name: 下载 Python 3.12.10
      run: |
        wget https://www.python.org/ftp/python/3.12.10/Python-3.12.10.tar.xz
        tar -xJf Python-3.12.10.tar.xz
        mv Python-3.12.10 cpython

    - name: 配置 Modules/Setup.local
      run: |
        cd cpython
        cat <<EOF > Modules/Setup.local
        zlib zlibmodule.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lz
        _ssl _ssl.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lssl -lcrypto
        _hashlib _hashlib.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lssl -lcrypto
        _curses _curses.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lncursesw
        _curses_panel _curses_panel.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lncursesw
        _bz2 _bz2.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lbz2
        _lzma _lzma.c -I${LZMA_H_PATH} -L${LZMA_LIB_PATH} -llzma
        _sqlite3 _sqlite3.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lsqlite3
        _ctypes _ctypes.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lffi
        _decimal _decimal.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lmpdec -lm
        readline readline.c -I$GITHUB_WORKSPACE/android-vroot/data/python/include -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lreadline -lncursesw
        EOF

    - name: 为 Android 配置 Python
      run: |
        cd cpython
        export CONFIG_SITE=config.site
        export MACHDEP=android
        cat <<EOF > $CONFIG_SITE
        ac_cv_file__dev_ptmx=yes
        ac_cv_file__dev_ptc=no
        ac_cv_func_shm_open=yes
        ac_cv_working_tzset=yes
        ac_cv_func_getgrent=no
        ac_cv_func_setgrent=no
        ac_cv_func_endgrent=no
        ac_cv_func_getpwent=no
        ac_cv_func_setpwent=no
        ac_cv_func_endpwent=no
        ac_cv_func_fork=no
        ac_cv_func_forkpty=no
        ac_cv_func_openpty=no
        ac_cv_func_spawn=no
        ac_cv_func_posix_spawn=no
        ac_cv_func_gethostbyname=no
        ac_cv_func_gethostbyaddr=no
        ac_cv_func_gethostbyname_r=no
        ac_cv_func_nis=no
        ac_cv_func_yp_get_default_domain=no
        ac_cv_func_epoll=no
        ac_cv_func_epoll_create1=no
        ac_cv_func_getservbyname=no
        ac_cv_func_getservbyport=no
        ac_cv_func_getprotobyname=no
        ac_cv_func_sem_clockwait=no
        EOF
        export SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot
        ./configure \
          --host=aarch64-linux-android \
          --build=x86_64-linux-gnu \
          --prefix=/data/python \
          --disable-ipv6 \
          --with-build-python=$(which python3) \
          --with-system-expat \
          --with-system-ffi \
          --with-system-libmpdec \
          --enable-loadable-sqlite-extensions \
          --enable-optimizations \
          --with-ensurepip=install \
          --with-lto=thin \
          CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang \
          CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang++ \
          AR=$AR \
          RANLIB=$RANLIB \
          READELF=$READELF \
          CFLAGS="-I${LZMA_H_PATH} -I$GITHUB_WORKSPACE/android-vroot/data/python/include -O3" \
          LDFLAGS="-L${LZMA_LIB_PATH} -L$GITHUB_WORKSPACE/android-vroot/data/python/lib --sysroot=$SYSROOT -fuse-ld=lld" \
          > configure.log 2>&1 || { echo "configure 失败"; cat configure.log; cat config.log; exit 1; }

    - name: 编译和安装 Python
      run: |
        cd cpython
        make -j$(nproc) > make.log 2>&1 || { echo "make 失败"; cat make.log; exit 1; }
        make install DESTDIR=$GITHUB_WORKSPACE/android-vroot > install.log 2>&1 || { echo "make install 失败"; cat install.log; exit 1; }
        ls -l $GITHUB_WORKSPACE/android-vroot/data/python/bin/python3 || { echo "python3 未找到"; exit 1; }

    - name: 测试 decimal 模块
      run: |
        $GITHUB_WORKSPACE/android-vroot/data/python/bin/python3 -c "import decimal; print(decimal.__version__)" > decimal_test.log 2>&1 || { echo "decimal 模块测试失败"; cat decimal_test.log; exit 1; }
        cat decimal_test.log

    - name: 创建 tar.gz 包
      run: |
        cd $GITHUB_WORKSPACE/android-vroot/data
        tar -czf $GITHUB_WORKSPACE/python-3.12.10-android-arm64.tar.gz python
        ls -l $GITHUB_WORKSPACE/python-3.12.10-android-arm64.tar.gz

    - name: 上传构建日志
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          mpdecimal-4.0.0/*.log
          cpython/*.log
          decimal_test.log

    - name: 上传 tar.gz 包
      uses: actions/upload-artifact@v4
      with:
        name: python-tar
        path: python-3.12.10-android-arm64.tar.gz