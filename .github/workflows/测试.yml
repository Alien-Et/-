name: Python Android ARM64 Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 60

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            zlib1g-dev \
            libffi-dev \
            libssl-dev \
            libbz2-dev \
            libreadline-dev \
            libsqlite3-dev \
            wget \
            curl \
            llvm \
            libncurses5-dev \
            libncursesw5-dev \
            xz-utils \
            tk-dev \
            libxml2-dev \
            libxmlsec1-dev \
            liblzma-dev \
            git \
            tar \
            python3 \
            python3-pip \
            unzip \
            binutils \
            tree \
            pkg-config \
            autoconf \
            automake \
            libtool

      - name: 设置 Android NDK (r27b)
        uses: android-actions/setup-android@v2
        with:
          ndk-version: "27.2.12479018"

      - name: 验证 NDK 安装
        run: |
          echo "Android NDK 根目录: $ANDROID_NDK_ROOT"
          ls -l $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/
          $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang --version

      - name: 配置编译环境
        run: |
          export READELF=$(which readelf)
          echo "READELF=$READELF" >> $GITHUB_ENV
          echo "AR=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar" >> $GITHUB_ENV
          echo "RANLIB=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib" >> $GITHUB_ENV
          echo "SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot" >> $GITHUB_ENV

      - name: 下载 Python 3.12.8
        run: |
          wget https://www.python.org/ftp/python/3.12.8/Python-3.12.8.tar.xz
          tar -xf Python-3.12.8.tar.xz
          mv Python-3.12.8 cpython

      - name: 预处理 Python 源码
        run: |
          cd cpython
          # 彻底禁用不兼容模块
          for module in grp pwd spwd; do
            [ -f Modules/${module}module.c ] && mv Modules/${module}module.c Modules/${module}module.c.disabled
            sed -i "/^$module /s/^/#/" Modules/Setup
            sed -i "/^${module}module.c/s/^/#/" Modules/Setup
          done
          
          # 创建 Android 专用配置
          cat <<EOF > config.site
          ac_cv_file__dev_ptmx=yes
          ac_cv_file__dev_ptc=no
          ac_cv_func_getgrent=no
          ac_cv_func_setgrent=no
          ac_cv_func_endgrent=no
          ac_cv_func_getpwent=no
          ac_cv_func_setpwent=no
          ac_cv_func_endpwent=no
          ac_cv_func_getgrgid_r=no
          ac_cv_func_getgrnam_r=no
          EOF

      - name: 构建依赖库
        run: |
          # 构建 zlib
          wget https://zlib.net/zlib-1.3.1.tar.gz
          tar -xzf zlib-1.3.1.tar.gz
          cd zlib-1.3.1
          CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang \
          AR=$AR \
          RANLIB=$RANLIB \
          ./configure --prefix=/data/python --static
          make -j$(nproc)
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          cd ..

          # 构建 ncurses
          wget https://ftp.gnu.org/gnu/ncurses/ncurses-6.5.tar.gz
          tar -xzf ncurses-6.5.tar.gz
          cd ncurses-6.5
          CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang \
          AR=$AR \
          RANLIB=$RANLIB \
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            --enable-widec \
            --without-cxx \
            CFLAGS="--sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc)
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          cd ..

          # 构建 readline
          wget https://ftp.gnu.org/gnu/readline/readline-8.2.tar.gz
          tar -xzf readline-8.2.tar.gz
          cd readline-8.2
          CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang \
          AR=$AR \
          RANLIB=$RANLIB \
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            bash_cv_wcwidth_broken=no \
            CFLAGS="-I$GITHUB_WORKSPACE/android-vroot/data/python/include --sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="-L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lncursesw --sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc)
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          cd ..

      - name: 配置 Python
        run: |
          cd cpython
          ./configure \
            --host=aarch64-linux-android \
            --build=x86_64-linux-gnu \
            --disable-ipv6 \
            --enable-optimizations \
            --with-build-python=$(which python3) \
            CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang \
            CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang++ \
            AR=$AR \
            RANLIB=$RANLIB \
            READELF=$READELF \
            --prefix=/data/python \
            CFLAGS="-I$GITHUB_WORKSPACE/android-vroot/data/python/include --sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="-L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lreadline -lncursesw -lz -lm -ldl --sysroot=$SYSROOT -fuse-ld=lld" \
            2>&1 | tee configure.log

          # 再次确认禁用状态
          if grep -q "grpmodule" Makefile; then
            echo "错误: grpmodule 仍然在构建系统中"
            exit 1
          fi

      - name: 构建 Python
        run: |
          cd cpython
          make -j$(nproc) 2>&1 | tee build.log || { echo "构建失败"; exit 1; }

      - name: 安装到虚拟文件系统
        run: |
          mkdir -p $GITHUB_WORKSPACE/android-vroot/data
          cd cpython
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          
          # 修复 shebang
          find $GITHUB_WORKSPACE/android-vroot/data/python/bin -type f -exec grep -l '^#!' {} \; | \
            xargs sed -i "1s|.*|#!/data/python/bin/python3|"

      - name: 打包发布
        run: |
          cd $GITHUB_WORKSPACE
          tar -czvf python-3.12.8-android-arm64.tar.gz \
            --transform 's|^android-vroot/||' \
            -C android-vroot \
            data
          
          echo "打包内容:"
          tar -tvf python-3.12.8-android-arm64.tar.gz | head -20

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: python-3.12.8-android-arm64
          path: |
            python-3.12.8-android-arm64.tar.gz
            cpython/build.log
            cpython/configure.log
