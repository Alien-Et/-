name: 构建 Python 并打包为 tar.gz

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出 Termux 官方仓库
      - name: 检出 termux-packages 仓库
        uses: actions/checkout@v4
        with:
          repository: termux/termux-packages
          ref: master

      # 安装系统依赖并设置 Termux 构建环境
      - name: 设置 Termux 构建环境
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl git build-essential
          ./scripts/setup-ubuntu.sh
          ./scripts/setup-android-sdk.sh

      # 创建临时安装目录
      - name: 创建临时安装目录
        run: |
          mkdir -p $HOME/staging/data/python

      # 修改所有相关包的 build.sh 脚本
      - name: 修改构建脚本中的安装路径
        run: |
          for pkg in bzip2 libandroid-support libbz2 libcrypt libffi liblzma libuuid ncurses openssl readline sqlite zlib python; do
            sed -i 's|--prefix=$TERMUX_PREFIX|--prefix=/data/python|g' packages/$pkg/build.sh
            sed -i 's|-I$TERMUX_PREFIX/include|-I  packages/$pkg/build.sh
            sed -i 's|-L$TERMUX_PREFIX/lib|-L/data/python/lib|g' packages/$pkg/build.sh
            sed -i 's|--with-openssl=$TERMUX_PREFIX|--with-openssl=/data/python|g' packages/$pkg/build.sh
          done
          # 检查修改是否成功
          grep -r --include=build.sh "/data/python" packages/

      # 构建并安装依赖
      - name: 构建并安装依赖
        run: |
          for pkg in bzip2 libandroid-support libbz2 libcrypt libffi liblzma libuuid ncurses openssl readline sqlite zlib; do
            TERMUX_PREFIX=$HOME/staging/data/python ./build-package.sh -i $pkg
          done

      # 构建并安装 Python
      - name: 构建并安装 Python
        run: |
          TERMUX_PREFIX=$HOME/staging/data/python ./build-package.sh -i python

      # 创建 tar.gz 归档
      - name: 创建 tar.gz 归档
        run: |
          cd $HOME/staging
          tar -czpf python-3.11.4.tar.gz --preserve-permissions --no-acls --no-xattrs data/python
          mkdir -p artifacts
          mv python-3.11.4.tar.gz artifacts/
          ls -lh artifacts/

      # 上传归档文件
      - name: 上传 tar.gz 文件
        uses: actions/upload-artifact@v4
        with:
          name: python-tar
          path: artifacts/