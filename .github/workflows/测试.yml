name: Build Python for Android (aarch64)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            wget \
            curl \
            tar \
            xz-utils \
            unzip \
            git \
            tree \
            python3 \
            python3-pip \
            m4 \
            bison \
            flex \
            texinfo \
            gawk \
            libtool \
            autoconf \
            automake \
            pkg-config \
            gperf

      - name: Setup Android NDK (r27b)
        uses: android-actions/setup-android@v2
        with:
          ndk-version: "27.2.12479018"

      - name: Verify NDK installation
        run: |
          echo "Android NDK root: $ANDROID_NDK_ROOT"
          ls -l $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/
          echo "Sysroot contents:"
          ls -l $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/
          $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang --version

      - name: Setup cross-compilation tools
        run: |
          export READELF=$(which readelf)
          if [ ! -f "$READELF" ]; then
            sudo apt install -y binutils
            export READELF=$(which readelf)
          fi
          echo "READELF=$READELF" >> $GITHUB_ENV
          echo "AR=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar" >> $GITHUB_ENV
          echo "RANLIB=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib" >> $GITHUB_ENV
          echo "SYSROOT=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/sysroot" >> $GITHUB_ENV
          echo "CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang++" >> $GITHUB_ENV

      - name: Check for liblzma in NDK
        id: check_liblzma
        run: |
          LZMA_H=$(find $ANDROID_NDK_ROOT -name lzma.h)
          LZMA_LIB=$(find $ANDROID_NDK_ROOT -name liblzma.a -o -name liblzma.so)
          if [ -n "$LZMA_H" ] && [ -n "$LZMA_LIB" ]; then
            echo "NDK provides liblzma"
            echo "LZMA_H_PATH=$(dirname $LZMA_H)" >> $GITHUB_ENV
            echo "LZMA_LIB_PATH=$(dirname $LZMA_LIB)" >> $GITHUB_ENV
            echo "USE_NDK_LZMA=true" >> $GITHUB_ENV
          else
            echo "NDK does not provide liblzma, will build xz"
            echo "USE_NDK_LZMA=false" >> $GITHUB_ENV
          fi

      - name: Download source packages
        run: |
          wget https://www.python.org/ftp/python/3.12.8/Python-3.12.8.tar.xz
          wget https://zlib.net/zlib-1.3.1.tar.gz
          wget https://ftp.gnu.org/gnu/ncurses/ncurses-6.5.tar.gz
          wget https://ftp.gnu.org/gnu/readline/readline-8.2.tar.gz
          tar -xf Python-3.12.8.tar.xz && mv Python-3.12.8 cpython
          tar -xzf zlib-1.3.1.tar.gz
          tar -xzf ncurses-6.5.tar.gz
          tar -xzf readline-8.2.tar.gz
          if [ "$USE_NDK_LZMA" = "false" ]; then
            wget https://tukaani.org/xz/xz-5.6.2.tar.gz
            tar -xzf xz-5.6.2.tar.gz
          fi

      - name: Build zlib
        run: |
          cd zlib-1.3.1
          ./configure \
            --prefix=/data/python \
            --static
          make -j$(nproc) CC="$CC" AR="$AR" RANLIB="$RANLIB" \
            CFLAGS="--sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          cd ..

      - name: Build xz (if needed)
        if: env.USE_NDK_LZMA == 'false'
        run: |
          cd xz-5.6.2
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            CC="$CC" \
            AR="$AR" \
            RANLIB="$RANLIB" \
            CFLAGS="--sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc)
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          echo "LZMA_H_PATH=$GITHUB_WORKSPACE/android-vroot/data/python/include" >> $GITHUB_ENV
          echo "LZMA_LIB_PATH=$GITHUB_WORKSPACE/android-vroot/data/python/lib" >> $GITHUB_ENV
          cd ..

      - name: Build ncurses
        run: |
          cd ncurses-6.5
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --with-shared \
            --without-cxx \
            --without-cxx-binding \
            --without-ada \
            --without-manpages \
            --without-progs \
            --without-tests \
            --with-terminfo-dirs=/data/python/share/terminfo \
            --with-ticlib=no \
            --with-termlib=no \
            --with-termcap \
            CC="$CC" \
            AR="$AR" \
            RANLIB="$RANLIB" \
            CFLAGS="--sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="--sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc)
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          
          # Ensure libraries are in the correct location
          mkdir -p $GITHUB_WORKSPACE/android-vroot/data/python/lib
          cp -f $GITHUB_WORKSPACE/android-vroot/data/python/lib*/libncurses.* $GITHUB_WORKSPACE/android-vroot/data/python/lib/ || true
          cp -f $GITHUB_WORKSPACE/android-vroot/usr/local/lib/libncurses.* $GITHUB_WORKSPACE/android-vroot/data/python/lib/ || true
          
          echo "READLINE_INCLUDE=$GITHUB_WORKSPACE/android-vroot/data/python/include" >> $GITHUB_ENV
          echo "READLINE_LIB=$GITHUB_WORKSPACE/android-vroot/data/python/lib" >> $GITHUB_ENV
          cd ..

      - name: Build readline
        run: |
          cd readline-8.2
          ./configure \
            --host=aarch64-linux-android \
            --prefix=/data/python \
            --disable-shared \
            --enable-static \
            bash_cv_wcwidth_broken=no \
            CC="$CC" \
            AR="$AR" \
            RANLIB="$RANLIB" \
            CFLAGS="-I$GITHUB_WORKSPACE/android-vroot/data/python/include --sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="-L$GITHUB_WORKSPACE/android-vroot/data/python/lib -lncurses --sysroot=$SYSROOT -fuse-ld=lld"
          make -j$(nproc)
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          cd ..

      - name: Configure Python
        run: |
          cd cpython
          export CONFIG_SITE=config.site
          cat <<EOF > $CONFIG_SITE
          ac_cv_file__dev_ptmx=yes
          ac_cv_file__dev_ptc=no
          EOF
          
          ./configure \
            --host=aarch64-linux-android \
            --build=x86_64-linux-gnu \
            --disable-ipv6 \
            --enable-optimizations \
            --with-build-python=$(which python3) \
            --prefix=/data/python \
            CC="$CC" \
            CXX="$CXX" \
            AR="$AR" \
            RANLIB="$RANLIB" \
            READELF="$READELF" \
            CFLAGS="-I${LZMA_H_PATH} -I$GITHUB_WORKSPACE/android-vroot/data/python/include -I${READLINE_INCLUDE} --sysroot=$SYSROOT -DANDROID" \
            LDFLAGS="-L${LZMA_LIB_PATH} -L$GITHUB_WORKSPACE/android-vroot/data/python/lib -llzma -L${READLINE_LIB} -lreadline -lncurses -lc -lm -ldl --sysroot=$SYSROOT -fuse-ld=lld" \
            > configure.log 2>&1 || { echo "configure failed"; cat configure.log; exit 1; }
          cd ..

      - name: Build Python
        run: |
          cd cpython
          make -j$(nproc)
          make install DESTDIR=$GITHUB_WORKSPACE/android-vroot
          cd ..

      - name: Verify installation
        run: |
          echo "Checking installed files:"
          tree -L 3 $GITHUB_WORKSPACE/android-vroot/data/python
          ls -l $GITHUB_WORKSPACE/android-vroot/data/python/bin/python*
          $GITHUB_WORKSPACE/android-vroot/data/python/bin/python3 --version || true

      - name: Fix shebangs and symlinks
        run: |
          # Fix Python shebangs
          find $GITHUB_WORKSPACE/android-vroot/data/python/bin -type f -exec grep -l '^#!' {} \; | while read -r file; do
            sed -i "1s|.*|#!/data/python/bin/python3|" "$file"
          done
          
          # Fix symlinks
          find $GITHUB_WORKSPACE/android-vroot/data/python -type l | while read -r link; do
            target=$(readlink "$link")
            if [[ "$target" != /* ]]; then
              link_dir=$(dirname "$link")
              abs_target=$(realpath -m "$link_dir/$target")
              new_target="/data/python/${abs_target#*/data/python/}"
              rm "$link"
              ln -s "$new_target" "$link"
            fi
          done
          
          # Make scripts executable
          find $GITHUB_WORKSPACE/android-vroot/data/python/bin -type f -exec chmod 755 {} \;

      - name: Create deployment package
        run: |
          tar -czvf python-3.12.8-android-arm64.tar.gz \
            --transform 's|^android-vroot/||' \
            -C $GITHUB_WORKSPACE/android-vroot \
            data
          tar -tvf python-3.12.8-android-arm64.tar.gz | head -20

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-3.12.8-android-arm64
          path: |
            python-3.12.8-android-arm64.tar.gz
            cpython/config.log
            ncurses-6.5/config.log
            readline-8.2/config.log
            zlib-1.3.1/config.log
            xz-5.6.2/config.log
